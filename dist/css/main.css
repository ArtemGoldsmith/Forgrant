img,legend{border:0}legend,td,th{padding:0}html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}article,aside,details,figcaption,figure,footer,header,hgroup,main,menu,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block;vertical-align:baseline}audio:not([controls]){display:none;height:0}[hidden],template{display:none}a{background-color:transparent}a:active,a:hover{outline:0}abbr[title]{border-bottom:1px dotted}b,optgroup,strong{font-weight:700}dfn{font-style:italic}h1{font-size:2em;margin:.67em 0}mark{background:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sup{top:-.5em}sub{bottom:-.25em}svg:not(:root){overflow:hidden}figure{margin:1em 40px}hr{box-sizing:content-box;height:0}pre,textarea{overflow:auto}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}button,input,optgroup,select,textarea{color:inherit;font:inherit;margin:0}button{overflow:visible}button,select{text-transform:none}button,html input[type=button],input[type=reset],input[type=submit]{-webkit-appearance:button;cursor:pointer}button[disabled],html input[disabled]{cursor:default}button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0}input{line-height:normal}input[type=checkbox],input[type=radio]{box-sizing:border-box;padding:0}input[type=number]::-webkit-inner-spin-button,input[type=number]::-webkit-outer-spin-button{height:auto}input[type=search]{-webkit-appearance:textfield;box-sizing:content-box}input[type=search]::-webkit-search-cancel-button,input[type=search]::-webkit-search-decoration{-webkit-appearance:none}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{}table{border-collapse:collapse;border-spacing:0}@font-face{font-family:Roboto-Black;src:local("Roboto-Black"),url(../assets/fonts/Roboto-Black.ttf) format("truetype");font-weight:900;font-style:normal}@font-face{font-family:Roboto-Black;src:local("Roboto-Black"),url(../assets/fonts/Roboto-BlackItalic.ttf) format("truetype");font-weight:900;font-style:italic}@font-face{font-family:Roboto-Bold;src:local("Roboto-Bold"),url(../assets/fonts/Roboto-Bold.ttf) format("truetype");font-weight:700;font-style:normal}@font-face{font-family:Roboto-Bold;src:local("Roboto-Bold"),url(../assets/fonts/Roboto-BoldItalic.ttf) format("truetype");font-weight:700;font-style:italic}@font-face{font-family:Roboto;src:local("Roboto"),url(../assets/fonts/Roboto-Italic.ttf) format("truetype");font-weight:400;font-style:italic}@font-face{font-family:Roboto-Light;src:local("Roboto-Light"),url(../assets/fonts/Roboto-Light.ttf) format("truetype");font-weight:200;font-style:normal}@font-face{font-family:Roboto-Light;src:local("Roboto-Light"),url(../assets/fonts/Roboto-LightItalic.ttf) format("truetype");font-weight:200;font-style:italic}@font-face{font-family:Roboto-Medium;src:local("Roboto-Medium"),url(../assets/fonts/Roboto-Medium.ttf) format("truetype");font-weight:500;font-style:normal}@font-face{font-family:Roboto-Medium;src:local("Roboto-Medium"),url(../assets/fonts/Roboto-MediumItalic.ttf) format("truetype");font-weight:500;font-style:italic}@font-face{font-family:Roboto;src:local("Roboto"),url(../assets/fonts/Roboto-Regular.ttf) format("truetype");font-weight:400;font-style:normal}@font-face{font-family:Roboto-Thin;src:local("Roboto-Thin"),url(../assets/fonts/Roboto-Thin.ttf) format("truetype");font-weight:100;font-style:normal}@font-face{font-family:Roboto-Thin;src:local("Roboto-Thin"),url(../assets/fonts/Roboto-ThinItalic.ttf) format("truetype");font-weight:100;font-style:italic}*{box-sizing:border-box}body{margin:0;font-family:Roboto,sans-serif;font-weight:400}.select-items>div,.select-selected{font-family:Roboto-Light,sans-serif;color:#fff;cursor:pointer}.app{min-height:100vh;background:url(../images/background.jpg) center center no-repeat;background-size:cover}@media all and (-webkit-min-device-pixel-ratio:1.5),all and (-o-min-device-pixel-ratio:3 / 2),all and (min--moz-device-pixel-ratio:1.5),all and (min-device-pixel-ratio:1.5){.app{background:url(../images/background@2x.jpg) center center no-repeat;background-size:cover}}@media (-webkit-min-device-pixel-ratio:2),(min-resolution:192dpi){.app{background:url(../images/background@2x.jpg) center center no-repeat;background-size:cover}}@media (-webkit-min-device-pixel-ratio:3),(min-resolution:288dpi){.app{background:url(../images/background@3x.jpg) center center no-repeat;background-size:cover}}.select-selected{background-color:transparent;padding:17px 15px;border:1px solid #92e8fe;border-radius:5px}.select-selected:after{content:'';border-style:solid;border-width:1px 1px 0 0;border-color:#92e8fe;display:inline-block;height:6px;position:absolute;left:auto;top:-4px;bottom:0;right:13px;width:6px;margin:auto;-webkit-transform:rotate(135deg);transform:rotate(135deg)}.custom-select select,.select-hide{display:none}.select-items{position:absolute;background-color:#1e252b;border:1px solid #92e8fe;border-radius:5px;top:calc(100% + 10px);left:0;right:0;z-index:99;padding:5px 0}.select-items>div{padding:5px 15px}.select-items>div:hover{background-color:#101e27}.custom-select{position:relative;width:300px}.custom-select .same-as-selected{background-color:rgba(0,0,0,.1)}.wrapper{max-width:985px;margin:auto}.currency-select{padding:20px 25px;background-color:rgba(252,252,252,.02);border:1px solid #2b3b45;border-radius:8px;display:flex;justify-content:space-between;align-items:center}.currency-select__title{color:#fff;font-family:Roboto-Medium,sans-serif;font-size:32px}.currency-blocks__block-price,.currency-blocks__block-title{font-family:Roboto-Bold,sans-serif}.currency-blocks{display:flex;justify-content:space-between}.currency-blocks__block{background-repeat:no-repeat;background-size:cover;border-radius:10px;overflow:hidden;width:310px;position:relative;padding:0 30px 5px;-webkit-touch-callout:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.currency-blocks__block-title{font-size:22px;color:#fff;text-align:center;margin-top:20px;margin-bottom:140px;position:relative;z-index:4}.currency-blocks__block-image,.currency-blocks__block-image img{position:absolute;width:100%;left:0}.currency-blocks__block-image{top:0;z-index:3;pointer-events:none}.currency-blocks__block-price{font-size:20px;color:#fff;display:flex;justify-content:space-between;margin-bottom:15px}.currency-blocks__block-changes .changes-line .changes-text,.currency-blocks__block-toggle .toggle-text{font-size:14px;color:#fff;font-family:Roboto-Bold,sans-serif}.currency-blocks__block-toggle{display:flex;justify-content:space-between;align-items:center;margin-bottom:10px}.currency-blocks__block-toggle .toggle{position:relative;z-index:4}.currency-blocks__block-toggle .toggle .checkbox{display:none}.currency-blocks__block-toggle .toggle .checkbox:checked+label{background-image:url(../images/toggle-bg-blue.png)}.currency-blocks__block-toggle .toggle .checkbox:checked+label:before{left:0}.currency-blocks__block-toggle .toggle .checkbox+label{display:inline-block;position:relative;width:40px;height:15px;background-image:url(../images/toggle-bg.png);border-radius:10px;transition:.3s ease;z-index:10;cursor:pointer}.currency-blocks__block-toggle .toggle .checkbox+label:before{content:"";background-size:cover;background-image:url(../images/toggle.png);width:24px;height:24px;position:absolute;top:-5px;left:16px;border-radius:100%;transition:left .3s ease}.currency-blocks__block-changes .changes-line{display:flex;justify-content:space-between;margin-bottom:5px}.currency-blocks__block-changes .changes-line .changes-text{opacity:.2}.currency-blocks__block-changes .changes-line .changes-value{font-size:16px;font-family:Roboto-Bold,sans-serif}.currency-blocks__block-changes .changes-line .changes-value.increase{color:#70c446}.currency-blocks__block-changes .changes-line .changes-value.decrease{color:#c80e24}.currency-blocks__block.eth .currency-blocks__block-image img{top:-23px;left:15px}.currency-blocks__block.ltc .currency-blocks__block-image img{top:0}.currency-blocks__block.btc .currency-blocks__block-image img{top:1px}@media screen and (max-width:1024px){.wrapper{padding:0 15px}.currency-blocks{flex-wrap:wrap;justify-content:space-around}.currency-blocks__block{margin-bottom:60px}.currency-select__title{font-size:28px}}@media screen and (max-width:767px){.currency-select{display:block;padding:15px}.currency-select__title{font-size:19px;margin-bottom:15px}.custom-select{width:100%}.currency-blocks__block{margin-bottom:15px}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
